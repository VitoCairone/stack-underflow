<div class="show-question-master">

	<div class="show-question-title" id="question-title-<%=@question.id%>">
		<!-- Not a header tag because headers insert an extra blank line -->
		<big><big><b>
	  <%= @question.title %>
		</big></big></b>
	</div>

	<div class="show-question-author">
		by <%= @question.user.username %>
	</div>
	<div class="show-question-body" id="question-body-<%=@question.id%>">
		<!-- TODO: fix this -->
		<%= @question.body.html_safe %>
		<%= render partial: "questions/delete",	locals: { object: @question,
							 object_url: question_url(@question) } %>
		<small><small>
			[<%= link_to "comment", new_question_comment_url(@question) %>]
		</small></small>
	</div>
	<div class="question-comments">
	  <% @question.comments.each do |comment| %>
	    <%= comment.body %> by <%= comment.user.username %>
			<%= render partial: "questions/delete",	locals: { object: comment,
								 object_url: question_comment_url(@question, comment) } %>
	  <% end %>
	<div>

	<br><br>

	<% if @answers %>
    <div class="show-answer-count">
	    <big><b><%= @answers.length %> Answers</b></big>
	  </div>
		  <% @answers.each do |answer| %>
			<div class="answer-container">
		    <table class="answer-table">
					<tr>
						<td class="vote-cell" valign="top">
							<%= link_to "/\\", answer_votes_url(answer, :is_up => true), method: :post %>
							<br>
							<%= answer.rating %>
							<br>
							<%= link_to "\\/", answer_votes_url(answer, :is_up => false), method: :post %>
						</td>
						<td>
							<div class="single-answer">
								<!-- TODO: fix this -->
						    <%= answer.body.html_safe %>

								<br><small>Answered by <%= answer.user.username %></small>
								<%= render partial: "questions/delete", locals: { object: answer,
													 object_url: question_answer_url(@question, answer) } %>
								<small><small>
						    	[<%= link_to "comment", new_answer_comment_url(answer) %>]
								</small></small>
							</div>

					    <div class="answer-comments">
					      <% answer.comments.each do |comment| %>
								<div class="single-answer-comment">

					        <%= comment.body %>
									<br><small><small>
										by <%= comment.user.username %>
									</small></small>
									<%= render partial: "questions/delete",	locals: { object: comment,
														 object_url: answer_comment_url(answer, comment) } %>
								</div>
					      <% end %>
					    </div>
						</td>
					</tr>
				</table>


			</div><!--answer-container-->
		  <% end %>
	<% end %>

	<a name="answer"></a>
	<div class="answer-page-wmd">
		<div class="wmd-panel submit-button">
			<button id="new_answer_button">Submit Answer</button>
		</div>
		<div class="wmd-panel">
		<div id="wmd-button-bar"></div>
		<textarea class="wmd-input" id="wmd-input"></textarea>
		</div>
		<div class="wmd-panel" id="preview-label">
		Preview:
		</div>
		<div id="wmd-preview" class="wmd-panel wmd-preview">
		</div>
	</div>

	<script type="text/javascript">
	  (function () {
	      var converter1 = Markdown.getSanitizingConverter();

				//fenced block-quote ("""  """) plugin
	      converter1.hooks.chain("preBlockGamut", function (text, rbg) {
	          return text.replace(/^ {0,3}""" *\n((?:.*?\n)+?) {0,3}""" *$/gm, function (whole, inner) {
	              return "<blockquote>" + rbg(inner) + "</blockquote>\n";
	          });
	      });

	      var editor1 = new Markdown.Editor(converter1);

	      editor1.run();
	  })();

		$(document).ready(function() {
			$('#new_answer_button').on("click", function(event) {
				event.preventDefault();
				var converter = Markdown.getSanitizingConverter();

				var user_text = converter.makeHtml($("#wmd-input").val());

				//this is not adequate for production
				//instead, store markup and convert on render,
				//or use ruby to convert and sanitize in the controller
				var data = {
					answer: {
						body: user_text
					}
				}

				$.ajax({
					url: "<%= question_answers_url(@question) %>",
					type: "POST",
					data: data,
					success: function() {
						console.log("AJAX request sent.")
						document.location.reload(true);
					}
				});
			});
		});
	</script>

</div>