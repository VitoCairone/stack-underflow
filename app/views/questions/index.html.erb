<div class="index-head">
<h2>Top Questions</h2>
<hr>
</div>

<div class="index-question-list">
	<% @questions.each do |question| %>
		<div class="index-question-block">

	    <table class="answer-table">
				<tr>
					<td class="vote-cell" valign="top">
						<%= link_to "/\\", question_votes_url(question, :is_up => true), method: :post %>
						<br>
						<%= question.rating %>
						<br>
						<%= link_to "\\/", question_votes_url(question, :is_up => false), method: :post %>
					</td>
					<td>
					  <div class="index-question-title" id="question-title-<%=question.id%>">
					    <h2>
					      <%= link_to question.title, question_url(question) %>
								<%= render partial: "questions/delete", locals: { object: question,
													 object_url: question_url(question) } %>
					    </h2>
					  </div>
					  <div class="index-question-body" id="question-body-<%=question.id%>">
							<!-- # Input is sanitized by Markdown.Sanitizer.js before being sent
								 	 # to the database -->
					    <%= question.body.html_safe %>
					  </div>
					  <div class="index-answer-count">
					    <small><b><%= question.answers.length %> anwers </b></small>
					  </div>
					</td>
				</tr>
			</table>
		</div>
	<% end %>
</div>

<a name="ask"></a>
<div class="wmd-panel submit-button">
	<button id="new_question_button">Submit Question</button>
</div>
<div class="wmd-panel" id="title-input">
	<label for="question_title">Title</label>
	<br><input type="text" name="question[title]" id="question_title">
</div>
<div class="wmd-panel" id="body-label">
	Body
</div>
<div class="wmd-panel">
<div id="wmd-button-bar"></div>
<textarea class="wmd-input" id="wmd-input">
</textarea>
</div>
<div class="wmd-panel" id="preview-label">
Preview:
</div>
<div id="wmd-preview" class="wmd-panel wmd-preview">
</div>

<script type="text/javascript">
  (function () {
      var converter1 = Markdown.getSanitizingConverter();

			//fenced block-quote ("""  """) plugin
      converter1.hooks.chain("preBlockGamut", function (text, rbg) {
          return text.replace(/^ {0,3}""" *\n((?:.*?\n)+?) {0,3}""" *$/gm, function (whole, inner) {
              return "<blockquote>" + rbg(inner) + "</blockquote>\n";
          });
      });

      var editor1 = new Markdown.Editor(converter1);

      editor1.run();
  })();

	$(document).ready(function() {
		$('#new_question_button').on("click", function(event) {
			event.preventDefault();
			var converter = Markdown.getSanitizingConverter();

			var user_text = converter.makeHtml($("#wmd-input").val());

			//this is not adequate for production
			//instead, store markup and convert on render,
			//or use ruby to convert and sanitize in the controller
			var data = {
				question: {
					title: $("#question_title").val(),
					body: user_text
				}
			}

			$.ajax({
				url: "<%= questions_url %>",
				type: "POST",
				data: data,
				success: function() {
					console.log("AJAX request sent.")
					document.location.reload(true);
				}
			});
		});
	});
</script>